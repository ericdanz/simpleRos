#include <ros.h>
#include <AFMotor.h>
#include <geometry_msgs/Twist.h>


ros::NodeHandle nh;

std_msgs::String boot_msg;
ros::Publisher boot('boot', &boot_msg);

void runMotors( const geometry_msgs::Twist& input_msg){
   digitalWrite(13, HIGH-digitalRead(13)); 
}

void requests( const std_msgs::String& req_msg){

}

ros::Subscriber<geometry_msgs::Twist> in_sub("inputs", &runMotors );
ros::Subscriber<std_msgs::String> req_sub("reqs", &requests );


void setup()
{
  nh.initNode();
  nh.advertise(boot);
  nh.subscribe(in_sub);
  nh.subscribe(req_sub);
}
